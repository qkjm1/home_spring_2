<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.repository.ArticleRepository">



	<update id="increaseLikeCountByMem" parameterType="int">
		UPDATE article A
		LEFT JOIN reactionPoint RP
		ON A.id = RP.relId
		SET
		hitCount = hitCount + 1
		WHERE id = #{id}
	</update>


	<update id="increaseHitCount" parameterType="int">
		UPDATE article
		SET
		hitCount = hitCount + 1
		WHERE id = #{id}
	</update>



	<insert id="writeArticle" parameterType="map">
		INSERT INTO article
		SET
		regDate = NOW(),
		updateDate = NOW(),
		memberId = #{memberId},
		boardId =
		#{boardId},
		title =
		#{title},
		`body` = #{body}
	</insert>

	<delete id="deleteArticle" parameterType="int">
		DELETE FROM article
		WHERE id = #{id}
	</delete>

	<update id="modifyArticle" parameterType="map">
		UPDATE article
		<set>
			<if test="title != null and title != ''">title = #{title},</if>
			<if test="body != null and body != ''">`body` = #{body},</if>
			updateDate = NOW()
		</set>
		WHERE id = #{id}
	</update>

	<select id="getLastInsertId" parameterType="int">
		SELECT
		LAST_INSERT_ID()
	</select>

	<!--></! -->

	<select id="getTotalCnt" parameterType="int">
		SELECT COUNT(*)
		FROM
		article
	</select>

	<select id="getArticleCountByBoard" parameterType="int">
		SELECT COUNT(*) , M.nickname AS extra__writer
		FROM article AS A
		INNER
		JOIN `member` AS M
		ON A.memberId = M.id
		<if test="boardId != 0">AND A.boardId = ${boardId}</if>
		<if test="searchKeyword != ''">
			<choose>
				<when test="searchKeywordTypeCode == 'title'">
					AND A.title LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<when test="searchKeywordTypeCode == 'body'">
					AND A.`body` LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<otherwise>
					AND A.title LIKE CONCAT('%', #{searchKeyword}, '%')
					OR
					A.`body` LIKE CONCAT('%', #{searchKeyword}, '%')
				</otherwise>
			</choose>
		</if>
	</select>

	<!--></! -->

	<select id="getArticleById" parameterType="int"
		resultType="com.example.demo.vo.Article">
		SELECT A.*,
		M.nickname AS extra__writer,
		B.name AS
		this__board
		FROM article A
		INNER
		JOIN
		`member` M
		ON A.memberId = M.id
		INNER
		JOIN board B
		ON A.boardId = B.id
		WHERE A.id = #{id}
		ORDER BY id DESC
	</select>

	<select id="getArticles"
		resultType="com.example.demo.vo.Article">
		SELECT A.*,
		M.nickname AS extra__writer,
		B.name AS
		this__board
		FROM article A
		INNER
		JOIN
		`member` M
		ON A.memberId = M.id
		INNER
		JOIN board B
		ON A.boardId = B.id
		ORDER BY id DESC
	</select>

	<select id="getArticlesByBoard"
		resultType="com.example.demo.vo.Article">
		SELECT A.*,
		M.nickname AS extra__writer,
		B.name AS this__board
		FROM
		article A
		INNER
		JOIN
		`member` M
		ON A.memberId = M.id
		INNER JOIN board B
		ON
		A.boardId = B.id
		<if test='boardId != 0'>WHERE A.boardId = ${boardId}</if>
		ORDER BY id DESC
	</select>

	<select id="getForPrintArticle" parameterType="int"
		resultType="com.example.demo.vo.Article">
		SELECT A.*,
		M.nickname AS extra__writer,
		B.name AS this__board,
		IFNULL(SUM(RP.point),0) AS extra__sumReactionPoint,
		IFNULL(SUM(IF(RP.point &gt; 0, RP.point, 0)),0) AS extra__goodReactionPoint,
		IFNULL(SUM(IF(RP.point &lt; 0, RP.point, 0)),0) AS extra__badReactionPoint
		FROM article A
		LEFT JOIN reactionPoint AS RP
		ON A.id = RP.relId AND RP.relTypeCode = 'article'
		INNER
		JOIN
		`member` M
		ON A.memberId = M.id
		INNER
		JOIN board B
		ON A.boardId = B.id
		WHERE A.id =#{id}
	</select>

	<select id="getForPrintArticles"
		resultType="com.example.demo.vo.Article">
		SELECT A.*,
		M.nickname AS extra__writer,
		B.name AS
		this__board,
		IFNULL(SUM(RP.point),0) AS extra__sumReactionPoint,
		IFNULL(SUM(IF(RP.point &gt; 0, RP.point, 0)),0) AS
		extra__goodReactionPoint,
		IFNULL(SUM(IF(RP.point &lt; 0, RP.point, 0)),0) AS extra__badReactionPoint
		FROM
		article A
		LEFT JOIN reactionPoint AS RP
		ON A.id = RP.relId AND RP.relTypeCode = 'article'
		INNER
		JOIN
		`member` M
		ON A.memberId = M.id
		INNER
		JOIN board B
		ON
		A.boardId = B.id
		WHERE 1
		<if test='boardId != 0'>AND A.boardId = ${boardId}</if>
		<if test="searchKeyword != ''">
			<choose>
				<when test="searchKeywordTypeCode == 'title'">
					AND title LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<when test="searchKeywordTypeCode == 'body'">
					AND `body` LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<when test="searchKeywordTypeCode == 'nickname'">
					AND M.nickname LIKE CONCAT('%',
					#{searchKeyword},'%')
				</when>
				<otherwise>
					AND title LIKE CONCAT('%', #{searchKeyword}, '%')
					OR
					`body` LIKE CONCAT('%', #{searchKeyword}, '%')
				</otherwise>
			</choose>
		</if>
		GROUP BY A.id
		ORDER BY id DESC
		<if test="limitForm >= 0">
			LIMIT #{limitForm},#{limitTake}
		</if>
	</select>

	<!--></! -->

	<select id="getArticleHitCount" parameterType="int">
		SELECT hitCount
		FROM article
		WHERE id = #{id}
	</select>
	
	
	<!--></! -->
	


</mapper>
